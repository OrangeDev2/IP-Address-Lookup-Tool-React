[{"/home/fel/Desktop/dev projects/react-projects/showip/client/src/index.js":"1","/home/fel/Desktop/dev projects/react-projects/showip/client/src/jQuery/background.js":"2","/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/about.jsx":"3","/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/home.jsx":"4","/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/ip-lookup.jsx":"5","/home/fel/Desktop/dev projects/react-projects/showip/client/src/App.js":"6","/home/fel/Desktop/dev projects/react-projects/showip/client/src/reportWebVitals.js":"7","/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/404.jsx":"8"},{"size":1261,"mtime":1609396589977,"results":"9","hashOfConfig":"10"},{"size":601,"mtime":1609374076639,"results":"11","hashOfConfig":"10"},{"size":636,"mtime":1609402104323,"results":"12","hashOfConfig":"10"},{"size":4369,"mtime":1609400982977,"results":"13","hashOfConfig":"10"},{"size":6733,"mtime":1609392810847,"results":"14","hashOfConfig":"10"},{"size":823,"mtime":1609396994923,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1608754550146,"results":"16","hashOfConfig":"10"},{"size":527,"mtime":1609400622507,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"5eorui",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/home/fel/Desktop/dev projects/react-projects/showip/client/src/index.js",[],["40","41"],"/home/fel/Desktop/dev projects/react-projects/showip/client/src/jQuery/background.js",[],"/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/about.jsx",[],["42","43"],"/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/home.jsx",["44"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport class HomePage extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { type: \"\", ipAddress: \"\", geonameID: \"\", myCountryFlag: \"\", myCountryCode: \"\", myRegionCode: \"\", myCountry: \"\", myRegion: \"\", myCity: \"\", myLat: \"\", myLng: \"\", postalCode: \"\", timeZone: \"\", ispName: \"\", asn: \"\" };\n    }\n\n  async callAPI() {\n    axios.get('http://localhost:8000/geolocation')\n    .then(result => {\n        this.setState({ ipAddress: result.data.ip, \n                        type: `(${result.data.type})`,\n                        myCountry: result.data.country_name,\n                        myCountryCode: result.data.country_code,\n                        myCountryFlag: result.data.location.country_flag_emoji,\n                        myRegion: result.data.region_name,\n                        myRegionCode: result.data.region_code,\n                        myCity: result.data.city,\n                        myLat: result.data.latitude,\n                        myLng:  result.data.longitude,\n                        postalCode: result.data.zip,\n                        geonameID: result.data.location.geoname_id,\n                        timeZone: result.data.time_zone.id + ' ' + result.data.time_zone.current_time + ' ' + result.data.time_zone.code,\n                        ispName: result.data.connection.isp,\n                        asn: result.data.connection.asn})\n    });\n}\n\n    componentDidMount() {\n          this.callAPI();\n    }\n\n\n    render(){\n      if (this.state.myLat && this.state.myLng){\n        var myLatitude = this.state.myLat;\n        var myLongitude = this.state.myLng;\n  \n        const google = window.google;\n        let map;\n  \n        function initMap() {\n          map = new google.maps.Map(document.getElementById(\"map\"), {\n            center: { lat: myLatitude, lng: myLongitude },\n            zoom: 10,\n            mapTypeId: google.maps.MapTypeId.TERRAIN\n          });\n        }\n  \n        initMap();\n      }\n\n      \n        return (\n          <div>\n              <div id=\"display\">\n              <h1>Show my IP address.</h1>\n              <p id=\"public-ip\">Your public IP address is <span id=\"ip-address\" style={{fontSize: \"1em\"}}>{this.state.ipAddress}</span> {this.state.type}</p>\n              \n              <br></br>\n              <p style={{marginTop: \"1em\", textAlign: \"left\"}}>{(this.state.myCity && this.state.myRegionCode && this.state.myCountryFlag) ? (`${this.state.myCity + `, ` + this.state.myRegionCode + `, ` + this.state.myCountryFlag}`) : \"\"}</p>\n              </div>\n\n              <div id=\"box-container\">\n                  <div id=\"map\" className=\"map\">\n                    \n                  </div>\n\n                  <div id=\"info\">\n                  <ul>\n                      <li><span style={{textDecoration: \"underline\"}}>City</span>: {this.state.myCity ? this.state.myCity : \"N/A\"}</li>\n                      <li><span style={{textDecoration: \"underline\"}}>State</span>: {this.state.myRegion ? this.state.myRegion : \"N/A\"}</li>           \n                      <li><span style={{textDecoration: \"underline\"}}>Country</span>: {this.state.myCountry ? this.state.myCountry : \"N/A\"}</li>        \n                      <li><span style={{textDecoration: \"underline\"}}>Timezone</span>: {this.state.timeZone ? this.state.timeZone : \"N/A\"}</li>\n                      <li><span style={{textDecoration: \"underline\"}}>Latitude</span>: {this.state.myLat ? this.state.myLat : \"\"}</li>          \n                      <li><span style={{textDecoration: \"underline\"}}>Longitude</span>: {this.state.myLng ? this.state.myLng : \"\"}</li>            \n                      <li><span style={{textDecoration: \"underline\"}}>Postal Code</span>: {this.state.postalCode ? this.state.postalCode : \"N/A\"}</li>               \n                      <li><span style={{textDecoration: \"underline\"}}>ISP Name</span>: {this.state.ispName ? this.state.ispName : \"N/A\"}</li>\n                      <li><span style={{textDecoration: \"underline\"}}>Geoname ID</span>: {this.state.geonameID ? this.state.geonameID : \"N/A\"}</li>\n                      <li><span style={{textDecoration: \"underline\"}}>ASN</span>: {this.state.asn ? this.state.asn : \"N/A\"}</li>\n                  </ul>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}","/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/ip-lookup.jsx",["45","46"],"import axios from 'axios';\nconst { Component } = require(\"react\");\n\nexport class IPLookUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { submitted: false, invalidInput: \"\", invalidInputColor: \"\", type: \"\", myCountryCode: \"\", myCountryFlag: \"\", myRegionCode: \"\", geonameID: \"\", asn: \"\", ipAddressDisplay:\"\" , ipAddress: \"\", myCountry: \"\", myRegion: \"\", myCity: \"\", myLat: \"\", myLng: \"\", postalCode: \"\", timeZone: \"\", ispName: \"\", connectionType: \"\" };\n  }\n\n    async callAPI(ipAddressParam) {\n      axios.get(`http://localhost:8000/geolocation/${ipAddressParam}`)\n      .then(result => {\n          this.setState({ ipAddress: result.data.ip, \n                          type: `(${result.data.type})`,\n                          myCountry: result.data.country_name,\n                          myCountryCode: result.data.country_code,\n                          myCountryFlag: result.data.location.country_flag_emoji,\n                          myRegion: result.data.region_name,\n                          myRegionCode: result.data.region_code,\n                          myCity: result.data.city,\n                          myLat: result.data.latitude,\n                          myLng:  result.data.longitude,\n                          postalCode: result.data.zip,\n                          geonameID: result.data.location.geoname_id,\n                          timeZone: result.data.time_zone.id + ' ' + result.data.time_zone.current_time + ' ' + result.data.time_zone.code,\n                          ispName: result.data.connection.isp,\n                          asn: result.data.connection.asn})\n      });\n    }\n\n    mySubmitHandler = (event) => {\n        event.preventDefault();\n\n        let inputValue = event.target.children[0].value;\n\n        if (inputValue === this.state.ipAddress){\n          this.setState({invalidInput: `You already entered \"${inputValue}\". Try again.`, invalidInputColor: \"red\"});\n          this.setState({submitted: false, myLat: \"\", myLng: \"\"});\n          event.target.reset();\n        }\n\n        else if (inputValue.match(/^(?:(?:2[0-4]\\d|25[0-5]|1\\d{2}|[1-9]?\\d)\\.){3}(?:2[0-4]\\d|25[0-5]|1\\d{2}|[1-9]?\\d)(?:\\:(?:\\d|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?$/) || inputValue.match(/^(?:^|(?<=\\s))(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(?=\\s|$)/)){\n          let ipAddressValue = inputValue;\n          this.callAPI(ipAddressValue);\n          this.setState({submitted: true});\n          this.setState({invalidInput: `You entered \"${inputValue}\"`, invalidInputColor: \"#D6DFE5\"});\n          event.target.reset();\n        }\n        else {\n          this.setState({invalidInput: `Invalid IP - \"${inputValue}\". Try again.`, invalidInputColor: \"red\"});\n          this.setState({submitted: false, myLat: \"\", myLng: \"\"});\n          event.target.reset();\n        }\n    }\n\n    /*myChangeHandler = (event) => {\n      this.setState({ipAddressDisplay: event.target.value, invalidInputColor: \"#D6DFE5\"});\n\n      // onChange={this.myChangeHandler} -> Add this to input element if uncommented.\n    }*/\n\n    renderIpInfo(){\n      return  (\n          <div id=\"box-container\">\n          <div id=\"map\" className=\"map\">\n\n          </div>\n\n          <div id=\"info\">\n            <ul>\n              <li><span style={{textDecoration: \"underline\"}}>City</span>: {this.state.myCity ? this.state.myCity : \"N/A\"}</li>\n              <li><span style={{textDecoration: \"underline\"}}>State</span>: {this.state.myRegion ? this.state.myRegion : \"N/A\"}</li>           \n              <li><span style={{textDecoration: \"underline\"}}>Country</span>: {this.state.myCountry ? this.state.myCountry : \"N/A\"}</li>        \n              <li><span style={{textDecoration: \"underline\"}}>Timezone</span>: {this.state.timeZone ? this.state.timeZone : \"N/A\"}</li>\n              <li><span style={{textDecoration: \"underline\"}}>Latitude</span>: {this.state.myLat ? this.state.myLat : \"\"}</li>          \n              <li><span style={{textDecoration: \"underline\"}}>Longitude</span>: {this.state.myLng ? this.state.myLng : \"\"}</li>            \n              <li><span style={{textDecoration: \"underline\"}}>Postal Code</span>: {this.state.postalCode ? this.state.postalCode : \"N/A\"}</li>               \n              <li><span style={{textDecoration: \"underline\"}}>ISP Name</span>: {this.state.ispName ? this.state.ispName : \"N/A\"}</li>\n              <li><span style={{textDecoration: \"underline\"}}>Geoname ID</span>: {this.state.geonameID ? this.state.geonameID : \"N/A\"}</li>\n              <li><span style={{textDecoration: \"underline\"}}>ASN</span>: {this.state.asn ? this.state.asn : \"N/A\"}</li>\n              <li><span style={{textDecoration: \"underline\"}}>IP Address entered</span>: {this.state.ipAddress ? this.state.ipAddress : \"\"}</li>\n            </ul>\n          </div>\n        </div>\n      )\n    }\n\n    render(){\n      if (this.state.myLat && this.state.myLng){\n        let myLatitude = this.state.myLat;\n        let myLongitude = this.state.myLng;\n\n        const google = window.google;\n        let map;\n\n        function initMap() {\n          map = new google.maps.Map(document.getElementById(\"map\"), {\n            center: { lat: myLatitude, lng: myLongitude },\n            zoom: 10,\n            mapTypeId: google.maps.MapTypeId.TERRAIN\n          });\n        }\n        initMap();\n      }\n\n        return (\n            <div>\n            <div id=\"display\" style={{textAlign: \"left\"}}>\n\n                <h1>IP Search</h1>\n        <p style={{fontSize: \".8em\", marginRight: \"1em\"}}>IP Address Lookup: <span style={{color: this.state.invalidInputColor}}>{this.state.invalidInput}</span></p>\n\n                    <form onSubmit={this.mySubmitHandler}>\n                      <input type=\"text\" placeholder=\"8.8.8.8\" className=\"search-input\"\n                      required minLength=\"7\" id=\"inputElement\"></input>\n                      <button className=\"search-button-style\" type=\"submit\">IP Lookup</button>\n                    </form>\n            </div>\n\n            {this.state.submitted && this.renderIpInfo()}\n\n        </div>\n        )\n    }\n}\n\nexport default IPLookUpPage;","/home/fel/Desktop/dev projects/react-projects/showip/client/src/App.js",["47"],"import React, { Component } from 'react';\n//import './App.css';\nimport './main.css';\nimport './jQuery/background.js';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n// Pages \nimport {HomePage} from './pages/home';\nimport IPLookUpPage from './pages/ip-lookup';\nimport ErrorPage from './pages/404';\nimport AboutPage from './pages/about';\n\nclass App extends Component {\n  render () {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/404\" component={ErrorPage}/>\n          <Route exact path=\"/\" component={HomePage}/>\n          <Route exact path=\"/about\" component={AboutPage}/>\n          <Route exact path=\"/ip-search\" component={IPLookUpPage}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </Router>\n    )\n  }\n}\nexport default App;\n","/home/fel/Desktop/dev projects/react-projects/showip/client/src/reportWebVitals.js",[],"/home/fel/Desktop/dev projects/react-projects/showip/client/src/pages/404.jsx",["48"],"import errorImg from './../pictures/showip-loaga.png';\nconst { Component } = require(\"react\");\n\n\nclass ErrorPage extends Component {\n    render() {\n        return (\n            <div>\n                <h1>404 page not found :(</h1>\n                <img src={errorImg} style={{width: \"20vw\", height: \"auto\"}}></img>\n                <p>We are sorry but the page you are looking for does not exist.</p>\n                <p>Please return to <a href=\"/\">homepage</a>.</p>\n            </div>\n        )\n    }\n}\n\nexport default ErrorPage;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":45,"column":11,"nodeType":"57","messageId":"58","endLine":45,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":42,"column":121,"nodeType":"61","messageId":"62","endLine":42,"endColumn":122,"suggestions":"63"},{"ruleId":"55","severity":1,"message":"56","line":97,"column":11,"nodeType":"57","messageId":"58","endLine":97,"endColumn":14},{"ruleId":"55","severity":1,"message":"64","line":10,"column":3,"nodeType":"57","messageId":"58","endLine":10,"endColumn":7},{"ruleId":"65","severity":1,"message":"66","line":10,"column":17,"nodeType":"67","endLine":10,"endColumn":77},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["70","71"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},"removeEscape",{"range":"78","text":"79"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"80","text":"81"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2166,2167],"",[2166,2166],"\\"]